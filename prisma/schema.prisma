generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pet {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @db.VarChar(100)
  species   String    @db.VarChar(50)
  birthdate DateTime? @db.Date
  gender    String?   @db.VarChar(10)
  status    String    @default("pending") @db.VarChar(50)
  breed     String?   @db.VarChar(100)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz

  adoptions Adoption[]

  @@map("pets")
}

model UserProfile {
  id          String    @id @default(uuid()) @db.Uuid
  firstName   String    @map("first_name") @db.VarChar(100)
  lastName    String?   @map("last_name") @db.VarChar(100)
  email       String?   @db.VarChar(100)
  phoneNumber String?   @map("phone_number") @db.VarChar(20)
  gender      String?   @db.VarChar(10)
  birthdate   DateTime? @db.Date
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt   DateTime  @default(now()) @map("updated_at") @db.Timestamptz
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz

  adoptions Adoption[]

  @@map("user_profiles")
}

model Adoption {
  id           String   @id @default(uuid()) @db.Uuid
  petId        String   @map("pet_id") @db.Uuid
  adopterId    String   @map("adopter_id") @db.Uuid
  adoptionDate DateTime @default(now()) @map("adoption_date") @db.Timestamptz
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt    DateTime @default(now()) @map("updated_at") @db.Timestamptz

  pet     Pet         @relation(fields: [petId], references: [id])
  adopter UserProfile @relation(fields: [adopterId], references: [id])

  @@unique([petId, adoptionDate])
  @@map("adoptions")
}
